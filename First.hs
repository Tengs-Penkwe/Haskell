-- | {-This is a comment-}module First wherefac 0 = 1fac n = n * fac(n-1)myif True x y = xmyif False x y = ymyfac n = myif (n==0) 1 (n*myfac(n-1))-- add x1 x2 t3 = (x1 + x2) :: t1 -> t2 -> tk -> ttype Picture = [[Char]]-- The example used in Craft2e: a polygon which looks like a horse. Here-- taken to be a 16 by 12 rectangle.horse :: Picturehorse = [".......##...",         ".....##..#..",         "...##.....#.",         "..#.......#.",         "..#...#...#.",         "..#...###.#.",         ".#....#..##.",         "..#...#.....",         "...#...#....",         "....#..#....",         ".....#.#....",         "......##...."]-- Completely white and black pictures.white :: Picturewhite = ["......",         "......",         "......",         "......",         "......",         "......"]black = ["######",         "######",         "######",         "######",         "######",         "######"]-- Getting a picture onto the screen.printPicture :: Picture -> IO ()printPicture = putStr . concat . map (++"\n")flipH :: Picture -> PictureflipH = reverseflipV :: Picture -> PictureflipV = map reverse-- invertColor :: Picture -> Pictureabove :: Picture -> Picture -> Pictureabove = (++)beside :: Picture -> Picture -> Picturebeside = zipWith (++)-- scale :: Picture -> Integer -> Picturetest_rotate, test_flipV, test_flipH :: Booltest_rotate = flipV (flipH horse) == flipH (flipV horse)test_flipV = flipV (flipV horse) == horsetest_flipH = flipH (flipV horse) == horse